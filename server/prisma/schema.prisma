generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid())
  googleId          String?   @unique
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt @default(now())
  email             String    @unique
  status            Status    @default(unverified)
  verifyToken       String?
  verifyTokenExpiry DateTime?
  role              Role      @default(USER)
  name              String?
  password          String?
  profileImage      String?

  likedSmartphones  UserSmartphoneLike[]
  userNotifications UserNotification[]
}

enum Role {
  USER
  ADMIN
  MODERATOR
  DEMO
}

enum Status {
  verified
  unverified
  banned
  pending
  suspended
}

model UserSmartphoneLike {
  userId        String
  smartphoneId  String
  likedAt       DateTime            @default(now())

  user          User                @relation(fields: [userId], references: [id])

  @@id([userId, smartphoneId])
}

enum NotificationType {
  newDevice
  maintenance
  roleUpdate
}

model GlobalNotification {
  globalNotificationId               String                 @id
  type             NotificationType       @default(newDevice)
  name             String?
  title            String 
  image            String
  createdAt        DateTime               @default(now())
}

model UserNotification {
  id                      String              @id @default(cuid())

  userId                  String
  globalNotificationId    String?                
  type NotificationType   @default(newDevice)
  name                    String?
  title                   String?
  image                   String?
  createdAt               DateTime            @default(now())
  isRead                  Boolean             @default(false)
  
  user                    User                @relation(fields: [userId], references: [id])
  
  @@unique([userId, globalNotificationId])
}

