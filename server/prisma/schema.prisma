generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String               @id @default(cuid())
  googleId               String?              @unique
  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @default(now()) @updatedAt
  email                  String               @unique
  status                 Status               @default(unverified)
  emailVerifyToken       String?
  emailVerifyTokenExpiry DateTime?
  forgotPassVerifyToken  String?
  forgotPassTokenExpiry  DateTime?
  role                   Role                 @default(USER)
  name                   String?
  password               String?
  profileImage           String?
  SmartphoneComments     SmartphoneComments[]
  userNotifications      UserNotification[]
  likedSmartphones       UserSmartphoneLike[]
}

model UserSmartphoneLike {
  userId       String
  smartphoneId String
  likedAt      DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])

  @@id([userId, smartphoneId])
}

model GlobalNotification {
  type                 NotificationType @default(newDevice)
  name                 String?
  title                String
  image                String
  createdAt            DateTime         @default(now())
  globalNotificationId String           @id
  description          String           @default("")
}

model UserNotification {
  id                   String           @id @default(cuid())
  userId               String
  globalNotificationId String?
  type                 NotificationType @default(newDevice)
  name                 String?
  title                String?
  image                String?
  createdAt            DateTime         @default(now())
  isRead               Boolean          @default(false)
  description          String?
  isDeleted            Boolean          @default(false)
  user                 User             @relation(fields: [userId], references: [id])

  @@unique([userId, globalNotificationId])
}

model SmartphoneComments {
  userId    String
  deviceId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  likes     Int      @default(0)
  dislikes  Int      @default(0)
  isDeleted Boolean  @default(false)
  message   String
  id        String   @id
  name      String
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
  MODERATOR
  DEMO
}

enum Status {
  verified
  unverified
  banned
  pending
  suspended
}

enum NotificationType {
  newDevice
  maintenance
  roleUpdate
}
